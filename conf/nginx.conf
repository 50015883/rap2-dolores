

#user  nobody;
worker_processes 2;

#error_log  /wwwlogs/error.log;
#error_log  /wwwlogs/error.log  notice;
error_log  /wwwlogs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /wwwlogs/frontend-admin-access.log main;

    sendfile        on;
    #tcp_nopush     on;
    tcp_nopush 		on; # 对于 keepalive 连接，可以尽快发送响应
    tcp_nodelay 	on; # 包填满了再发，与 sendfile 组合用

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    gzip on;
    gzip_vary on;
    gzip_http_version 1.0; # 对 HTTP 1.0 启用，据说 30% 的移动流量是 HTTP 1.0，还好我用联通
    gzip_min_length 1000; # 太小的没必要压缩
    gzip_comp_level 6; # 其实大于 0 都行，CPU 够用就设大点吧
    gzip_disable msie6;
    gzip_types text/plain text/html text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml;


    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        charset utf-8;
        root   /www;

        #access_log  /wwwlogs/host.access.log  main;

        # API 反向代理, 跳转到后端服务
        location /api/ {
            proxy_redirect off;
            proxy_set_header  Host  $host:$server_port;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_403 http_404;

            proxy_pass http://ace-gate:8765/api/;
        }

        location /jwt/ {
            proxy_redirect off;
            proxy_set_header  Host  $host:$server_port;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_403 http_404;

            proxy_pass http://ace-gate:8765/jwt/;
        }


        location / {
            index  index.html index.htm index.js;
        }


        location ~* \.html$ {
            try_files $uri /index.html;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /www;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


}

